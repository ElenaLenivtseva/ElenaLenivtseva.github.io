ЮЗЕРЫ
--- это что-то, что приходит с dummyjson. Может быть не только users, а, н-р, products.
--- это нечто прям внешнее. 
С ними можно:
- получить всех пользователей --- внешнее
- получить отфильтрованных пользователей -- внешнее

ЮЗЕР - один
--- это один элемент из массива, который прилетел с сервера. Сущность, по сути дела
С ним можно:
- узнать доп инфу о юзере. Через открытие/закрытие модального окна с данными одного юзера

ТАБЛИЦА
--- что-то мне подсказывает, что в данный момент это основа приложения, то, ради чего оно и написано. Суть не в том, чтобы отрисовать именно users. Ведь может появиться еще что-то. Например, products. А таблица по логике должна остаться собой. Делится на заголовки и строки user
С ней можно:
--- основная ее цель - отображение данных с сервера. Т.е. ее уровень, по сути, отображение
--- отсортировать таблицу с юзерами --- это не изменяет users, это изменяет по сути только порядок отображения users
--- изменить ширину колонок таблицы --- также не изменяет users. Это принадлежит только таблице, так же как и сортировка. 


Модальное окно
--- Это пешка для User - с помощью модалки мы и реализуем метод User "узнать доп инфу". Но на уровне верстки модалка принадлежит таблице. Потому что отрисовывать каждой отдельной строке с данными user свою собственную модалку = потенциально тысяча модалок (если тысяча users).  Уровень отображения данных. Ничего не меняет. Может менять только собственное состояние: вкл, выкл, и содержимое. 
С ним можно:
- менять внутренее состояние (вкл/выкл) и содержимое (какой user внутри)

Search
--- отдельный компонент. Он для связи table(представление) и users (истины с сервера)
С ним можно
- выполнить поиск по users --- внешнее. В моей логике поиск будет изменять users. Т.е. не будет разделения на все и отфильтрованные. Для удобства передачи данных в таблицу. Ей же вообще все равно должно быть, что отрисовывать.
- менять внутренее состояние (для изменений в инпуте, для отправки) - уровень отображения